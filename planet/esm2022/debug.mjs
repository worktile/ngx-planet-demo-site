import { isFunction } from './helpers';
/**
 * Debug factory for debug module
 */
let _debugFactory;
let _debuggerMap = {};
export function createDebug(namespace) {
    const key = `planet:${namespace}`;
    return function (formatter, ...args) {
        if (_debugFactory) {
            let debugDebugger = _debuggerMap[key];
            if (!debugDebugger) {
                debugDebugger = _debugFactory(key);
                _debuggerMap[key] = debugDebugger;
            }
            debugDebugger(formatter, args);
        }
    };
}
export function setDebugFactory(debug) {
    if (debug && !isFunction(debug)) {
        throw new Error('debug factory type is invalid, must be function');
    }
    _debugFactory = debug;
}
export function clearDebugFactory() {
    _debugFactory = undefined;
    _debuggerMap = {};
}
export function getDebugFactory() {
    return _debugFactory;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wYWNrYWdlcy9wbGFuZXQvc3JjL2RlYnVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxXQUFXLENBQUM7QUErQnZDOztHQUVHO0FBQ0gsSUFBSSxhQUFnQyxDQUFDO0FBQ3JDLElBQUksWUFBWSxHQUE2QixFQUFFLENBQUM7QUFFaEQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxTQUFpQjtJQUN6QyxNQUFNLEdBQUcsR0FBRyxVQUFVLFNBQVMsRUFBRSxDQUFDO0lBQ2xDLE9BQU8sVUFBUyxTQUFjLEVBQUUsR0FBRyxJQUFXO1FBQzFDLElBQUksYUFBYSxFQUFFLENBQUM7WUFDaEIsSUFBSSxhQUFhLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDakIsYUFBYSxHQUFHLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbkMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxHQUFHLGFBQWEsQ0FBQztZQUN0QyxDQUFDO1lBQ0QsYUFBYSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNuQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQUMsS0FBWTtJQUN4QyxJQUFJLEtBQUssSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1FBQzlCLE1BQU0sSUFBSSxLQUFLLENBQUMsaURBQWlELENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBQ0QsYUFBYSxHQUFHLEtBQUssQ0FBQztBQUMxQixDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQjtJQUM3QixhQUFhLEdBQUcsU0FBUyxDQUFDO0lBQzFCLFlBQVksR0FBRyxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlO0lBQzNCLE9BQU8sYUFBYSxDQUFDO0FBQ3pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuZXhwb3J0IGludGVyZmFjZSBEZWJ1Z2dlciB7XG4gICAgKGZvcm1hdHRlcjogYW55LCAuLi5hcmdzOiBhbnlbXSk6IHZvaWQ7XG5cbiAgICAvLyBjb2xvcjogc3RyaW5nO1xuICAgIC8vIGVuYWJsZWQ6IGJvb2xlYW47XG4gICAgLy8gbG9nOiAoLi4uYXJnczogYW55W10pID0+IGFueTtcbiAgICAvLyBuYW1lc3BhY2U6IHN0cmluZztcbiAgICAvLyBkZXN0cm95OiAoKSA9PiBib29sZWFuO1xuICAgIC8vIGV4dGVuZDogKG5hbWVzcGFjZTogc3RyaW5nLCBkZWxpbWl0ZXI/OiBzdHJpbmcpID0+IERlYnVnZ2VyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1hdHRlcnMge1xuICAgIFtmb3JtYXR0ZXI6IHN0cmluZ106ICh2OiBhbnkpID0+IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEZWJ1ZyB7XG4gICAgKG5hbWVzcGFjZTogc3RyaW5nKTogRGVidWdnZXI7XG4gICAgY29lcmNlOiAodmFsOiBhbnkpID0+IGFueTtcbiAgICBkaXNhYmxlOiAoKSA9PiBzdHJpbmc7XG4gICAgZW5hYmxlOiAobmFtZXNwYWNlczogc3RyaW5nKSA9PiB2b2lkO1xuICAgIGVuYWJsZWQ6IChuYW1lc3BhY2VzOiBzdHJpbmcpID0+IGJvb2xlYW47XG4gICAgbG9nOiAoLi4uYXJnczogYW55W10pID0+IGFueTtcblxuICAgIG5hbWVzOiBSZWdFeHBbXTtcbiAgICBza2lwczogUmVnRXhwW107XG5cbiAgICBmb3JtYXR0ZXJzOiBGb3JtYXR0ZXJzO1xufVxuXG4vKipcbiAqIERlYnVnIGZhY3RvcnkgZm9yIGRlYnVnIG1vZHVsZVxuICovXG5sZXQgX2RlYnVnRmFjdG9yeTogRGVidWcgfCB1bmRlZmluZWQ7XG5sZXQgX2RlYnVnZ2VyTWFwOiBSZWNvcmQ8c3RyaW5nLCBEZWJ1Z2dlcj4gPSB7fTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlYnVnKG5hbWVzcGFjZTogc3RyaW5nKTogRGVidWdnZXIge1xuICAgIGNvbnN0IGtleSA9IGBwbGFuZXQ6JHtuYW1lc3BhY2V9YDtcbiAgICByZXR1cm4gZnVuY3Rpb24oZm9ybWF0dGVyOiBhbnksIC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICAgIGlmIChfZGVidWdGYWN0b3J5KSB7XG4gICAgICAgICAgICBsZXQgZGVidWdEZWJ1Z2dlciA9IF9kZWJ1Z2dlck1hcFtrZXldO1xuICAgICAgICAgICAgaWYgKCFkZWJ1Z0RlYnVnZ2VyKSB7XG4gICAgICAgICAgICAgICAgZGVidWdEZWJ1Z2dlciA9IF9kZWJ1Z0ZhY3Rvcnkoa2V5KTtcbiAgICAgICAgICAgICAgICBfZGVidWdnZXJNYXBba2V5XSA9IGRlYnVnRGVidWdnZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWJ1Z0RlYnVnZ2VyKGZvcm1hdHRlciwgYXJncyk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RGVidWdGYWN0b3J5KGRlYnVnOiBEZWJ1Zykge1xuICAgIGlmIChkZWJ1ZyAmJiAhaXNGdW5jdGlvbihkZWJ1ZykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdkZWJ1ZyBmYWN0b3J5IHR5cGUgaXMgaW52YWxpZCwgbXVzdCBiZSBmdW5jdGlvbicpO1xuICAgIH1cbiAgICBfZGVidWdGYWN0b3J5ID0gZGVidWc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckRlYnVnRmFjdG9yeSgpIHtcbiAgICBfZGVidWdGYWN0b3J5ID0gdW5kZWZpbmVkO1xuICAgIF9kZWJ1Z2dlck1hcCA9IHt9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVidWdGYWN0b3J5KCkge1xuICAgIHJldHVybiBfZGVidWdGYWN0b3J5O1xufVxuIl19